
; --- variables ---





; --- layout ---


(defwindow dash
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry 
        :width "35px" 
        :height "35px"
        :anchor "top left"
        :y "45px"
        :x "10px"
    )
    (dash-box)
)

(defwindow ws
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry 
        :width "130px" 
        :height "35px"
        :anchor "top left"
        :y "45px"
        :x "55px"
    )
    (ws-box)
)

(defwindow monitors
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry 
        :width "100px" 
        :height "35px"
        :anchor "top right"
        :y "45px"
        :x "-90px"
    )
    (mon-box)
)

(defwindow clock
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry 
        :width "70px" 
        :height "35px"
        :anchor "top right"
        :y "45px"
        :x "-10px"
    )
    (clock-box)
)


; --- dash ---


(defwidget dash-box []
    (box :orientation "horizontal"
        :class "background"
    )
)


; --- workspaces ---


(deflisten workspaces "scripts/workspaces") 

(defwidget ws-box []
    (box :orientation "horizontal"
        :class "background"
        (button 
            :class "ws"
            (label :text "♥")
        )
        (button 
            :class "ws"
            (label :text "♦")
        )
        (button 
            :class "ws"
            (label :text "♠")
        )
        (button 
            :class "ws"
            (label :text "♣")
        )
    )
)


; --- monitors ---


(defvar hover-vol false)
(defvar hover-wifi false)
(defvar hover-bat false)

(defwidget monitor [icon showval show hidden]
    (eventbox
        :onhover "${EWW_CMD} update ${showval}=true"
        :onhoverlost "${EWW_CMD} update ${showval}=false"
        ; :halign "end"
        ; :width "30"
        
        (box :orientation "horizontal"
            :class "monitor"
            :space-evenly "false"
            :hexpand "false"
            
            (revealer
                :transition "slideleft"
                :reveal {show}
                :duration "100ms"
                (label
                    :class "hidden"
                    :text {hidden}
                    :justify "right" 
                    :orientation "horizontal"
                )
            )
            (label 
                :class "icon"
                :text {icon}
                :justify "right"
            )
        )
    )
)


(defwidget mon-box []
    (box :orientation "horizontal"
        :class "mon-box"
        :halign "end"
        :space-evenly "false"
        
        (monitor
            :icon "?{}"
            :show {hover-vol}
            :showval "hover-vol"
            :hidden "AAAAAAAAAAAAAAAAAAAAAAA"
            :class "volume"
        )
        
        (monitor
            :icon "B"
            :show {hover-wifi}
            :showval "hover-wifi"
            :hidden "BBBBBBBBBBBBBBBBBBBBBBBBB"
            :class "wifi"
        )
        
        (monitor
            :icon "C"
            :show {hover-bat}
            :showval "hover-bat"
            :hidden "${EWW_BATTERY.BAT1.capacity}%"
            :class "battery"
        )
        
    )
)


; --- clock ---


(defwidget clock-box []
    (box :orientation "horizontal"
        :class "background"
    )
)


; --- calendar ---